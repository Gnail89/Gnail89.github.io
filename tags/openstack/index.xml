<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>OpenStack on 📕W.&#39;s Blog</title>
    <link>https://gnail89.github.io/tags/openstack/</link>
    <description>Recent content in OpenStack on 📕W.&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 Aug 2025 00:00:00 +0800</lastBuildDate><atom:link href="https://gnail89.github.io/tags/openstack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Openstack_mk_vm</title>
      <link>https://gnail89.github.io/posts/openstack_mk_vm/</link>
      <pubDate>Tue, 12 Aug 2025 00:00:00 +0800</pubDate>
      
      <guid>https://gnail89.github.io/posts/openstack_mk_vm/</guid>
      <description>引导虚拟机实例简单流程(AI) #!/bin/bash set -Eeuo pipefail basepath=$(cd `dirname $0`;pwd) readonly VM_FORMAT_FILE=&amp;#34;vm_info_format.txt&amp;#34; readonly HYPERVISOR_FILE=&amp;#34;env_available_host_list.txt&amp;#34; readonly VOL_TYPE_FILE=&amp;#34;env_cinder_volume_type.txt&amp;#34; readonly IMAGES_FILE=&amp;#34;env_image_list.txt&amp;#34; readonly DATA_SEPARATOR=&amp;#34;+&amp;#34; readonly MAX_PARALLEL=2 log() { local lvl=&amp;#34;$1&amp;#34; msg=&amp;#34;$2&amp;#34; printf &amp;#34;%s [%4s] %s\n&amp;#34; &amp;#34;$(date +&amp;#39;%F %T&amp;#39;)&amp;#34; &amp;#34;$lvl&amp;#34; &amp;#34;$msg&amp;#34; &amp;gt;&amp;amp;2 &amp;amp;&amp;amp; return 0 [[ &amp;#34;$lvl&amp;#34; == &amp;#34;ERROR&amp;#34; ]] &amp;amp;&amp;amp; exit 1 } trap &amp;#39;log ERROR &amp;#34;Script aborted in $FUNCNAME at line $LINENO&amp;#34;&amp;#39; ERR require_cmd() { command -v &amp;#34;$1&amp;#34; &amp;amp;&amp;gt;/dev/null || log ERROR &amp;#34;缺少命令: $1&amp;#34;;} init_deps() { for cmd in openstack nova awk grep sed tee; do require_cmd &amp;#34;$cmd&amp;#34;; done; } check_volumes(){ local retries=$1 count=0 vol_ids=(&amp;#34;${@:2}&amp;#34;) for ((i=0; i&amp;lt;retries; i++)); do count=0 for vid in &amp;#34;${vol_ids[@]}&amp;#34;; do [[ -z &amp;#34;$vid&amp;#34; || &amp;#34;$vid&amp;#34; == &amp;#34;None&amp;#34; ]] &amp;amp;&amp;amp; log ERROR &amp;#34;无效的卷ID&amp;#34; local st; st=$(openstack volume show -f value --column status &amp;#34;$vid&amp;#34;) case &amp;#34;$st&amp;#34; in available) count=$((count+1)) ;; error*) log ERROR &amp;#34;卷状态显示error, ID: $vid&amp;#34; ;; esac done [[ $count -eq ${#vol_ids[@]} ]] &amp;amp;&amp;amp; { echo ok; return 0; } sleep 30 done echo &amp;#34;None&amp;#34; return 0 } export_volume_types(){ &amp;gt; &amp;#34;$1&amp;#34; log INFO &amp;#34;正在导出卷类型列表&amp;#34; openstack volume type list -f value --column Name | grep -Ev &amp;#39;^(#|$)&amp;#39; &amp;gt; &amp;#34;$1&amp;#34; || echo &amp;#34;None&amp;#34; &amp;gt; &amp;#34;$1&amp;#34; } export_hypervisors(){ &amp;gt; &amp;#34;$1&amp;#34; log INFO &amp;#34;正在导出可用的宿主机列表&amp;#34; openstack compute service list -f value --service nova-compute \ | awk &amp;#39;$5 == &amp;#34;enabled&amp;#34; &amp;amp;&amp;amp; $6 == &amp;#34;up&amp;#34; {print $4&amp;#34;:&amp;#34;$3}&amp;#39; | grep -Ev &amp;#39;^(#|$)&amp;#39; &amp;gt; &amp;#34;$1&amp;#34; || echo &amp;#34;None&amp;#34; &amp;gt; &amp;#34;$1&amp;#34; } export_images(){ &amp;gt; &amp;#34;$1&amp;#34; log INFO &amp;#34;正在导出镜像列表&amp;#34; openstack image list -f value --column Name | grep -Ev &amp;#39;^(#|$)&amp;#39; &amp;gt; &amp;#34;$1&amp;#34; || echo &amp;#34;None&amp;#34; &amp;gt; &amp;#34;$1&amp;#34; } create_boot_volume(){ local name=$1 size=$2 image=$3 type=$4 [[ -z &amp;#34;$name&amp;#34; || -z &amp;#34;$size&amp;#34; || -z &amp;#34;$image&amp;#34; || -z &amp;#34;$type&amp;#34; ]] &amp;amp;&amp;amp; log ERROR &amp;#34;缺少卷创建参数&amp;#34; local vol_name=&amp;#34;${name}-sysvol&amp;#34; log INFO &amp;#34;创建启动卷: $vol_name&amp;#34; local opts=(--size &amp;#34;$size&amp;#34; --image &amp;#34;$(openstack image show -f value --column id &amp;#34;$image&amp;#34;)&amp;#34;) [[ &amp;#34;$type&amp;#34; !</description>
    </item>
    
    <item>
      <title>OpenStack build case</title>
      <link>https://gnail89.github.io/posts/openstack_build_case/</link>
      <pubDate>Mon, 28 Jul 2025 00:00:00 +0800</pubDate>
      
      <guid>https://gnail89.github.io/posts/openstack_build_case/</guid>
      <description>软件环境 openEuler 22.03 Python 3.9.22 OpenStack 2025.1 软件版本上限约束 根据安装要求，选定软件版本限制范围。https://opendev.org/openstack/requirements 或者 https://releases.openstack.org/constraints/upper/2025.1 # e.g curl https://opendev.org/openstack/requirements/raw/branch/stable/2025.1/upper-constraints.txt 使用python虚拟环境 # 创建python虚拟测试环境 python3 -m venv /opt/openstack # 进入虚拟环境 source /opt/openstack/bin/activate # 退出虚拟环境 deactivate # 升级pip pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple 安装软件 # 检查组件版本release，确定版本信息 # https://releases.openstack.org/epoxy/index.html pip install keystone==27.0.0 nova==31.0.0 cinder==26.1.0 neutron==26.0.1 glance==30.0.0 horizon==25.3.0 ironic==29.0.3 swift==2.35.0 -i https://pypi.tuna.tsinghua.edu.cn/simple -c upper-constraints.txt # 下载离线包 pip download -d ~/packages/ keystone==27.0.0 nova==31.0.0 cinder==26.1.0 neutron==26.0.1 glance==30.0.0 horizon==25.3.0 ironic==29.0.3 swift==2.35.0 -i https://pypi.</description>
    </item>
    
    <item>
      <title>Setup Openstackclient 3.12.2 by pip</title>
      <link>https://gnail89.github.io/posts/setup-openstackclient-3.12.2-by-pip/</link>
      <pubDate>Mon, 19 Feb 2024 12:57:00 +0800</pubDate>
      
      <guid>https://gnail89.github.io/posts/setup-openstackclient-3.12.2-by-pip/</guid>
      <description>OpenStack client 3.12.2离线安装 下载python源码包：https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz
查找pip包：https://pypi.org/
OpenStack各版本release版号：https://releases.openstack.org/
OpenStack各组件release版号：https://docs.openstack.org/releasenotes/
编译安装python tar zxf Python-3.8.18.tgz ./configure --prefix=/opt/python make &amp;amp;&amp;amp; make install 通过pip下载离线安装包 创建虚拟环境 python3.8 -m venv /opt/env_cli3.12 source /opt/env_cli3.12/bin/activate #（退出虚拟环境使用deactivate） 下载安装包 /opt/python/bin/pip3 download \ -d /opt/python-openstackclient-3.12.2 \ --index https://mirrors.bfsu.edu.cn/pypi/web/simple/ \ python-openstackclient==3.12.2 \ python-novaclient==9.1.3 \ python-keystoneclient==3.12.0 \ python-glanceclient==2.8.1 \ python-cinderclient==3.1.1 \ openstacksdk==0.9.17 \ keystoneauth1==3.1.1 \ os-client-config==1.28.1 \ osc-lib==1.7.1 \ oslo.config==4.13.2 \ oslo.i18n==3.23.1 \ oslo.serialization==2.20.3 \ oslo.utils==3.28.4 通过pip执行离线安装 cd /opt/python-openstackclient-3.12.2 /opt/python/bin/pip3 install --no-index -f . * </description>
    </item>
    
  </channel>
</rss>
